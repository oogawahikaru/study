{"ast":null,"code":"var _jsxFileName = \"/Users/ogawahikaru/01-a/src/ts-kokyaku/src/App.tsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import TodoList from './components/List';\n\n// // const App: React.FC = () => {\n// //   return (\n// //     <div>\n// //       <h1>顧客管理システム</h1>\n// //       <TodoList />\n// //     </div>\n// //   );\n// // };\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\n// データの型定義\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // データを取得するためのuseEffect\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/api/testestes'); // バックエンドAPIにリクエスト\n        setData(response.data); // 取得したデータをstateに保存\n        setLoading(false);\n      } catch (err) {\n        setError('データの取得に失敗しました');\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u30C6\\u30B9\\u30C8\\u30C7\\u30FC\\u30BF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.name\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"C4fiAW6C7RZgaKDoEXQgZpbuUZg=\");\n_c = App;\nexport default App;\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","data","setData","loading","setLoading","error","setError","fetchData","response","get","err","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","name","id","_c","$RefreshReg$"],"sources":["/Users/ogawahikaru/01-a/src/ts-kokyaku/src/App.tsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import TodoList from './components/List';\n\n// // const App: React.FC = () => {\n// //   return (\n// //     <div>\n// //       <h1>顧客管理システム</h1>\n// //       <TodoList />\n// //     </div>\n// //   );\n// // };\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\n// データの型定義\ninterface TestestesData {\n  id: number;\n  name: string;\n}\n\nconst App: React.FC = () => {\n  const [data, setData] = useState<TestestesData[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // データを取得するためのuseEffect\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get<TestestesData[]>('http://localhost:3001/api/testestes'); // バックエンドAPIにリクエスト\n        setData(response.data); // 取得したデータをstateに保存\n        setLoading(false);\n      } catch (err) {\n        setError('データの取得に失敗しました');\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>{error}</div>;\n  }\n\n  return (\n    <div>\n      <h1>テストデータ</h1>\n      <ul>\n        {data.map((item) => (\n          <li key={item.id}>\n            {item.name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n\n\n\n// export default App;"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMA,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAkB,EAAE,CAAC;EACrD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAU,IAAI,CAAC;EACrD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAgB,IAAI,CAAC;;EAEvD;EACAD,SAAS,CAAC,MAAM;IACd,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAkB,qCAAqC,CAAC,CAAC,CAAC;QAC1FP,OAAO,CAACM,QAAQ,CAACP,IAAI,CAAC,CAAC,CAAC;QACxBG,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOM,GAAG,EAAE;QACZJ,QAAQ,CAAC,eAAe,CAAC;QACzBF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAa,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,IAAIV,KAAK,EAAE;IACT,oBAAOP,OAAA;MAAAa,QAAA,EAAMN;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC3B;EAEA,oBACEjB,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfjB,OAAA;MAAAa,QAAA,EACGV,IAAI,CAACe,GAAG,CAAEC,IAAI,iBACbnB,OAAA;QAAAa,QAAA,EACGM,IAAI,CAACC;MAAI,GADHD,IAAI,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACf,EAAA,CAzCID,GAAa;AAAAqB,EAAA,GAAbrB,GAAa;AA2CnB,eAAeA,GAAG;;AAIlB;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}