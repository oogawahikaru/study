{"ast":null,"code":"var _jsxFileName = \"/Users/ogawahikaru/01-a/src/ts-kokyaku/src/pages/CustomerList/CustomerList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './CustomerList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockCustomers = [{\n  id: 1,\n  name: \"John Doe\",\n  email: \"john@example.com\",\n  tel: \"123-4567\",\n  company: \"Company A\"\n}];\nconst CustomerList = () => {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  useEffect(() => {\n    setCustomers(mockCustomers);\n  }, []);\n  const filteredCustomers = customers.filter(customer => customer.name.toLowerCase().includes(searchQuery.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u9867\\u5BA2\\u4E00\\u89A7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u9867\\u5BA2\\u540D\\u3067\\u691C\\u7D22\",\n      value: searchQuery,\n      onChange: e => setSearchQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredCustomers.map(customer => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [customer.name, \" - \", customer.email, \" - \", customer.tel, \" - \", customer.company]\n      }, customer.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(CustomerList, \"tL3ete3SQBs9baUpdZgNrli7M7o=\");\n_c = CustomerList;\nexport default CustomerList;\nvar _c;\n$RefreshReg$(_c, \"CustomerList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","mockCustomers","id","name","email","tel","company","CustomerList","_s","customers","setCustomers","searchQuery","setSearchQuery","filteredCustomers","filter","customer","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","map","_c","$RefreshReg$"],"sources":["/Users/ogawahikaru/01-a/src/ts-kokyaku/src/pages/CustomerList/CustomerList.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './CustomerList.module.css';\n\ninterface Customer {\n    id: number;\n    name: string;\n    email: string;\n    tel: string;\n    company: string;\n}\n\nconst mockCustomers: Customer[] = [\n    { id: 1, name: \"John Doe\", email: \"john@example.com\", tel: \"123-4567\", company: \"Company A\" },\n];\n\nconst CustomerList: React.FC = () => {\n    const [customers, setCustomers] = useState<Customer[]>([]);\n    const [searchQuery, setSearchQuery] = useState(\"\");\n\n    useEffect(() => {\n        setCustomers(mockCustomers);\n    }, []);\n\n    const filteredCustomers = customers.filter((customer) =>\n        customer.name.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n\n    return (\n        <div>\n            <h2>顧客一覧</h2>\n            <input\n                type=\"text\"\n                placeholder=\"顧客名で検索\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n            />\n            <ul>\n                {filteredCustomers.map((customer) => (\n                    <li key={customer.id}>\n                        {customer.name} - {customer.email} - {customer.tel} - {customer.company}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default CustomerList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUnC,MAAMC,aAAyB,GAAG,CAC9B;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,UAAU;EAAEC,KAAK,EAAE,kBAAkB;EAAEC,GAAG,EAAE,UAAU;EAAEC,OAAO,EAAE;AAAY,CAAC,CAChG;AAED,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAa,EAAE,CAAC;EAC1D,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACZY,YAAY,CAACT,aAAa,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,iBAAiB,GAAGJ,SAAS,CAACK,MAAM,CAAEC,QAAQ,IAChDA,QAAQ,CAACZ,IAAI,CAACa,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACN,WAAW,CAACK,WAAW,CAAC,CAAC,CAClE,CAAC;EAED,oBACIhB,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAAkB,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbtB,OAAA;MACIuB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,sCAAQ;MACpBC,KAAK,EAAEd,WAAY;MACnBe,QAAQ,EAAGC,CAAC,IAAKf,cAAc,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,eACFtB,OAAA;MAAAkB,QAAA,EACKL,iBAAiB,CAACgB,GAAG,CAAEd,QAAQ,iBAC5Bf,OAAA;QAAAkB,QAAA,GACKH,QAAQ,CAACZ,IAAI,EAAC,KAAG,EAACY,QAAQ,CAACX,KAAK,EAAC,KAAG,EAACW,QAAQ,CAACV,GAAG,EAAC,KAAG,EAACU,QAAQ,CAACT,OAAO;MAAA,GADlES,QAAQ,CAACb,EAAE;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACd,EAAA,CA9BID,YAAsB;AAAAuB,EAAA,GAAtBvB,YAAsB;AAgC5B,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}