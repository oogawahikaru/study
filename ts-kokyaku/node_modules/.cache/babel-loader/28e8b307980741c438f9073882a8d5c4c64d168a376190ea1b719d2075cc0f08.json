{"ast":null,"code":"var _jsxFileName = \"/Users/ogawahikaru/01-a/src/ts-kokyaku/src/pages/CustomerForm/CustomerForm.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport styles from './CustomerForm.module.css';\nimport { TextField, Button, Box, Typography, Select, MenuItem, InputLabel, FormControl } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomerCreate = () => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    reset\n  } = useForm();\n  const onSubmit = data => {\n    console.log(data);\n    alert('顧客が登録されました');\n    reset();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.customerForm,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"\\u9867\\u5BA2\\u767B\\u9332\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"\\u540D\\u524D\",\n          fullWidth: true,\n          ...register(\"name\", {\n            required: \"名前は必須です\"\n          }),\n          error: false,\n          helperText: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"\\u30E1\\u30FC\\u30EB\",\n          type: \"email\",\n          fullWidth: true,\n          ...register(\"email\", {\n            required: \"メールは必須です\"\n          }),\n          error: false,\n          helperText: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"\\u96FB\\u8A71\\u756A\\u53F7\",\n          fullWidth: true,\n          ...register(\"tel\", {\n            required: \"電話番号は必須です\"\n          }),\n          error: false,\n          helperText: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"\\u4F4F\\u6240\",\n          fullWidth: true,\n          ...register(\"address\", {\n            required: \"住所は必須です\"\n          }),\n          error: false,\n          helperText: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          margin: \"normal\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"\\u4F1A\\u793E\\u540D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            ...register('company', {\n              required: true\n            }),\n            value: selectedCompany,\n            onChange: e => setSelectedCompany(e.target.value),\n            label: \"\\u4F1A\\u793E\\u540D\",\n            children: mockCompanies.map((company, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: company.company,\n              children: company.company\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          type: \"submit\",\n          fullWidth: true,\n          children: \"\\u767B\\u9332\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(CustomerCreate, \"Tv3ax+IYeS+IUhXACHCvYwCyM94=\", false, function () {\n  return [useForm];\n});\n_c = CustomerCreate;\nexport default CustomerCreate;\nvar _c;\n$RefreshReg$(_c, \"CustomerCreate\");","map":{"version":3,"names":["React","useForm","styles","TextField","Button","Box","Typography","Select","MenuItem","InputLabel","FormControl","jsxDEV","_jsxDEV","CustomerCreate","_s","register","handleSubmit","reset","onSubmit","data","console","log","alert","className","customerForm","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","sx","display","flexDirection","gap","label","fullWidth","required","error","helperText","type","margin","value","selectedCompany","onChange","e","setSelectedCompany","target","mockCompanies","map","company","index","color","_c","$RefreshReg$"],"sources":["/Users/ogawahikaru/01-a/src/ts-kokyaku/src/pages/CustomerForm/CustomerForm.tsx"],"sourcesContent":["import React from 'react';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport styles from './CustomerForm.module.css';\nimport { TextField, Button, Box, Typography, Select, MenuItem, InputLabel, FormControl  } from '@mui/material';\n\ninterface CustomerFormInputs {\n    name: string;\n    email: string;\n    tel: number;\n    address: string;\n    company: string;\n}\n\nconst CustomerCreate: React.FC = () => {\n    const { register, handleSubmit, reset } = useForm<CustomerFormInputs>();\n\n    const onSubmit: SubmitHandler<CustomerFormInputs> = (data) => {\n        console.log(data); \n        alert('顧客が登録されました');\n        reset();\n    };\n\n    return (\n        <div className={styles.customerForm}>\n            <Typography variant=\"h5\" gutterBottom>顧客登録</Typography>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n                    <TextField\n                        label=\"名前\"\n                        fullWidth\n                        {...register(\"name\", { required: \"名前は必須です\" })}\n                        error={false}\n                        helperText=\"\"\n                    />\n                    <TextField\n                        label=\"メール\"\n                        type=\"email\"\n                        fullWidth\n                        {...register(\"email\", { required: \"メールは必須です\" })}\n                        error={false}\n                        helperText=\"\"\n                    />\n                    <TextField\n                        label=\"電話番号\"\n                        fullWidth\n                        {...register(\"tel\", { required: \"電話番号は必須です\" })}\n                        error={false}\n                        helperText=\"\"\n                    />\n                    <TextField\n                        label=\"住所\"\n                        fullWidth\n                        {...register(\"address\", { required: \"住所は必須です\" })}\n                        error={false}\n                        helperText=\"\"\n                    />\n                    <FormControl fullWidth margin=\"normal\">\n                    <InputLabel>会社名</InputLabel>\n                    <Select\n                        {...register('company', { required: true })}\n                        value={selectedCompany}\n                        onChange={(e) => setSelectedCompany(e.target.value)}\n                        label=\"会社名\"\n                    >\n                        {mockCompanies.map((company, index) => (\n                            <MenuItem key={index} value={company.company}>\n                                {company.company}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                    </FormControl>\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" fullWidth>\n                        登録\n                    </Button>\n                </Box>\n            </form>\n        </div>\n    );\n};\n\nexport default CustomerCreate;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}