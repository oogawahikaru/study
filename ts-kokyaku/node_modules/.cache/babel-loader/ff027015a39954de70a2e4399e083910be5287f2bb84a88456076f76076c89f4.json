{"ast":null,"code":"var _jsxFileName = \"/Users/ogawahikaru/01-a/src/ts-kokyaku/src/pages/CustomerList/CustomerList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from './CustomerList.module.css';\nimport { Modal, Box, Typography, TextField, Button, Select, MenuItem, FormControl } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockCustomers = [{\n  id: 10,\n  name: \"aaa\",\n  email: \"aaaa@aaaa.com\",\n  tel: \"123-456-7890\"\n}];\nconst CustomerList = () => {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  useEffect(() => {\n    setCustomers(mockCustomers);\n  }, []);\n  const filteredCustomers = customers.filter(customer => customer.name.toLowerCase().includes(searchQuery.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.customerList,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.customerListHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u9867\\u5BA2\\u4E00\\u89A7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: styles.modalButton,\n        onClick: () => setIsModalOpen(true),\n        children: \"\\u7D5E\\u308A\\u8FBC\\u307F\\u6761\\u4EF6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredCustomers.map(customer => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [customer.name, \" - \", customer.email, \" - \", customer.tel, \" \", /*#__PURE__*/_jsxDEV(Button, {\n          children: \"\\u7DE8\\u96C6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 77\n        }, this)]\n      }, customer.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: isModalOpen,\n      onClose: () => setIsModalOpen(false),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: styles.modalOverlay,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: styles.modalContent,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: styles.modalHeader,\n            children: [\"\\u6761\\u4EF6\", /*#__PURE__*/_jsxDEV(Button, {\n              className: styles.closeButton,\n              onClick: () => setIsModalOpen(false),\n              children: \"\\u9589\\u3058\\u308B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"\\u9867\\u5BA2\\u540D\\u3067\\u691C\\u7D22\",\n              variant: \"outlined\",\n              fullWidth: true,\n              value: searchQuery,\n              onChange: e => setSearchQuery(e.target.value),\n              sx: {\n                mb: 2\n              },\n              className: styles.searchCon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              sx: {\n                mb: 2\n              },\n              className: styles.searchCon,\n              children: /*#__PURE__*/_jsxDEV(Select\n              // value={selectedCompany}\n              // onChange={handleCompanyChange}\n              , {\n                displayEmpty: true,\n                children: /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"\\u5168\\u3066\\u306E\\u4F1A\\u793E\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: styles.searchButton,\n            children: \"\\u691C\\u7D22\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(CustomerList, \"5FTScNR2ALGTRqfhT9Gd1/qJrfo=\");\n_c = CustomerList;\nexport default CustomerList;\nvar _c;\n$RefreshReg$(_c, \"CustomerList\");","map":{"version":3,"names":["React","useState","useEffect","styles","Modal","Box","Typography","TextField","Button","Select","MenuItem","FormControl","jsxDEV","_jsxDEV","mockCustomers","id","name","email","tel","CustomerList","_s","customers","setCustomers","searchQuery","setSearchQuery","isModalOpen","setIsModalOpen","filteredCustomers","filter","customer","toLowerCase","includes","className","customerList","children","customerListHeader","fileName","_jsxFileName","lineNumber","columnNumber","modalButton","onClick","map","open","onClose","modalOverlay","modalContent","variant","modalHeader","closeButton","label","fullWidth","value","onChange","e","target","sx","mb","searchCon","displayEmpty","searchButton","_c","$RefreshReg$"],"sources":["/Users/ogawahikaru/01-a/src/ts-kokyaku/src/pages/CustomerList/CustomerList.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from './CustomerList.module.css';\nimport { Modal, Box, Typography, TextField, Button, Select, MenuItem, FormControl, InputLabel} from '@mui/material';\n\ninterface Customer {\n    id: number;\n    name: string;\n    email: string;\n    tel: string;\n    // company: string;\n}\n\nconst mockCustomers: Customer[] = [\n    { id: 10, name: \"aaa\", email: \"aaaa@aaaa.com\", tel: \"123-456-7890\"},\n];\n\nconst CustomerList: React.FC = () => {\n    const [customers, setCustomers] = useState<Customer[]>([]);\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    useEffect(() => {\n        setCustomers(mockCustomers);\n    }, []);\n\n    const filteredCustomers = customers.filter((customer) =>\n        customer.name.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n\n    return (\n        <div className={styles.customerList}>\n            <div className={styles.customerListHeader}>\n                <h2>顧客一覧</h2>\n                <Button className={styles.modalButton} onClick={() => setIsModalOpen(true)}>絞り込み条件</Button>\n            </div>\n            \n            <ul>\n                {filteredCustomers.map((customer) => (\n                    <li key={customer.id}>\n                        {customer.name} - {customer.email} - {customer.tel} <Button>編集</Button>\n                    </li>\n                ))}\n            </ul>\n\n            <Modal open={isModalOpen} onClose={() => setIsModalOpen(false)}>\n                <Box className={styles.modalOverlay}>\n                    <Box className={styles.modalContent}>\n                        <Typography variant=\"h6\" className={styles.modalHeader}>\n                            条件\n                            <Button className={styles.closeButton} onClick={() => setIsModalOpen(false)}>\n                                閉じる\n                            </Button>\n                        </Typography>\n                        <Box>\n                        {/* 会社名 */}\n                        <TextField\n                            label=\"顧客名で検索\"\n                            variant=\"outlined\"\n                            fullWidth\n                            value={searchQuery}\n                            onChange={(e) => setSearchQuery(e.target.value)}\n                            sx={{ mb: 2 }}\n                            className={styles.searchCon}\n                        />\n\n                        {/* 顧客名 */}\n                        <FormControl fullWidth sx={{ mb: 2 }} className={styles.searchCon}>\n                            {/* <InputLabel>会社名</InputLabel> */}\n                            <Select\n                                // value={selectedCompany}\n                                // onChange={handleCompanyChange}\n                                displayEmpty\n                            >\n                                <MenuItem value=\"\">全ての会社</MenuItem>\n                            </Select>\n                        </FormControl>\n                        </Box>\n                        <Button className={styles.searchButton}>検索</Button>\n                    </Box>\n                </Box>\n            </Modal>\n        </div>\n    );\n};\n\nexport default CustomerList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,2BAA2B;AAC9C,SAASC,KAAK,EAAEC,GAAG,EAAEC,UAAU,EAAEC,SAAS,EAAEC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,QAAmB,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUpH,MAAMC,aAAyB,GAAG,CAC9B;EAAEC,EAAE,EAAE,EAAE;EAAEC,IAAI,EAAE,KAAK;EAAEC,KAAK,EAAE,eAAe;EAAEC,GAAG,EAAE;AAAc,CAAC,CACtE;AAED,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAa,EAAE,CAAC;EAC1D,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAErDC,SAAS,CAAC,MAAM;IACZoB,YAAY,CAACR,aAAa,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,iBAAiB,GAAGN,SAAS,CAACO,MAAM,CAAEC,QAAQ,IAChDA,QAAQ,CAACb,IAAI,CAACc,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACR,WAAW,CAACO,WAAW,CAAC,CAAC,CAClE,CAAC;EAED,oBACIjB,OAAA;IAAKmB,SAAS,EAAE7B,MAAM,CAAC8B,YAAa;IAAAC,QAAA,gBAChCrB,OAAA;MAAKmB,SAAS,EAAE7B,MAAM,CAACgC,kBAAmB;MAAAD,QAAA,gBACtCrB,OAAA;QAAAqB,QAAA,EAAI;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACb1B,OAAA,CAACL,MAAM;QAACwB,SAAS,EAAE7B,MAAM,CAACqC,WAAY;QAACC,OAAO,EAAEA,CAAA,KAAMf,cAAc,CAAC,IAAI,CAAE;QAAAQ,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1F,CAAC,eAEN1B,OAAA;MAAAqB,QAAA,EACKP,iBAAiB,CAACe,GAAG,CAAEb,QAAQ,iBAC5BhB,OAAA;QAAAqB,QAAA,GACKL,QAAQ,CAACb,IAAI,EAAC,KAAG,EAACa,QAAQ,CAACZ,KAAK,EAAC,KAAG,EAACY,QAAQ,CAACX,GAAG,EAAC,GAAC,eAAAL,OAAA,CAACL,MAAM;UAAA0B,QAAA,EAAC;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GADlEV,QAAQ,CAACd,EAAE;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAEL1B,OAAA,CAACT,KAAK;MAACuC,IAAI,EAAElB,WAAY;MAACmB,OAAO,EAAEA,CAAA,KAAMlB,cAAc,CAAC,KAAK,CAAE;MAAAQ,QAAA,eAC3DrB,OAAA,CAACR,GAAG;QAAC2B,SAAS,EAAE7B,MAAM,CAAC0C,YAAa;QAAAX,QAAA,eAChCrB,OAAA,CAACR,GAAG;UAAC2B,SAAS,EAAE7B,MAAM,CAAC2C,YAAa;UAAAZ,QAAA,gBAChCrB,OAAA,CAACP,UAAU;YAACyC,OAAO,EAAC,IAAI;YAACf,SAAS,EAAE7B,MAAM,CAAC6C,WAAY;YAAAd,QAAA,GAAC,cAEpD,eAAArB,OAAA,CAACL,MAAM;cAACwB,SAAS,EAAE7B,MAAM,CAAC8C,WAAY;cAACR,OAAO,EAAEA,CAAA,KAAMf,cAAc,CAAC,KAAK,CAAE;cAAAQ,QAAA,EAAC;YAE7E;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eACb1B,OAAA,CAACR,GAAG;YAAA6B,QAAA,gBAEJrB,OAAA,CAACN,SAAS;cACN2C,KAAK,EAAC,sCAAQ;cACdH,OAAO,EAAC,UAAU;cAClBI,SAAS;cACTC,KAAK,EAAE7B,WAAY;cACnB8B,QAAQ,EAAGC,CAAC,IAAK9B,cAAc,CAAC8B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;cAChDI,EAAE,EAAE;gBAAEC,EAAE,EAAE;cAAE,CAAE;cACdzB,SAAS,EAAE7B,MAAM,CAACuD;YAAU;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/B,CAAC,eAGF1B,OAAA,CAACF,WAAW;cAACwC,SAAS;cAACK,EAAE,EAAE;gBAAEC,EAAE,EAAE;cAAE,CAAE;cAACzB,SAAS,EAAE7B,MAAM,CAACuD,SAAU;cAAAxB,QAAA,eAE9DrB,OAAA,CAACJ;cACG;cACA;cAAA;gBACAkD,YAAY;gBAAAzB,QAAA,eAEZrB,OAAA,CAACH,QAAQ;kBAAC0C,KAAK,EAAC,EAAE;kBAAAlB,QAAA,EAAC;gBAAK;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAU;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/B;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eACN1B,OAAA,CAACL,MAAM;YAACwB,SAAS,EAAE7B,MAAM,CAACyD,YAAa;YAAA1B,QAAA,EAAC;UAAE;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd,CAAC;AAACnB,EAAA,CAnEID,YAAsB;AAAA0C,EAAA,GAAtB1C,YAAsB;AAqE5B,eAAeA,YAAY;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}